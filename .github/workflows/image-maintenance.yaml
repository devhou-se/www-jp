name: Image Maintenance

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Maintenance operation to perform'
        required: true
        type: choice
        options:
          - rebuild-cache
          - verify-cache
          - stats
          - dry-run
      parallelism:
        description: 'Number of concurrent processors (1-50)'
        required: false
        default: '20'
        type: string

concurrency:
  group: image-maintenance
  cancel-in-progress: false

jobs:
  maintenance:
    name: Image Maintenance
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Setup GCP credentials
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $HOME/gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV

      - name: Run maintenance operation
        run: |
          case "${{ inputs.operation }}" in
            rebuild-cache)
              echo "🔄 Rebuilding cache from GCS..."
              go run go/image-processor/*.go --rebuild-cache
              ;;
            verify-cache)
              echo "🔍 Verifying cache integrity..."
              go run go/image-processor/*.go --verify-cache
              ;;
            stats)
              echo "📊 Generating cache statistics..."
              go run go/image-processor/*.go --maintenance stats
              ;;
            dry-run)
              echo "🧪 Performing dry run..."
              go run go/image-processor/*.go --dry-run --parallelism ${{ inputs.parallelism }}
              ;;
          esac

      - name: Setup git bot
        if: inputs.operation == 'rebuild-cache'
        uses: ./.github/actions/setup-git-bot

      - name: Commit cache changes
        if: inputs.operation == 'rebuild-cache'
        id: commit
        run: |
          git add imager-cache.txt

          if git diff --cached --quiet; then
            echo "No cache changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Rebuild image cache from GCS"
            git push
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✓ Cache changes committed"
          fi

      - name: Summary
        run: |
          echo "### Image Maintenance Complete 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Operation:** ${{ inputs.operation }}" >> $GITHUB_STEP_SUMMARY
          echo "**Parallelism:** ${{ inputs.parallelism }}" >> $GITHUB_STEP_SUMMARY

          if [ "${{ inputs.operation }}" == "rebuild-cache" ] && [ "${{ steps.commit.outputs.has_changes }}" == "true" ]; then
            echo "**Result:** Cache rebuilt and committed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ inputs.operation }}" == "rebuild-cache" ]; then
            echo "**Result:** Cache unchanged" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Result:** Operation completed successfully" >> $GITHUB_STEP_SUMMARY
          fi
