name: Post

on:
  issue_comment:

concurrency:
  group: post-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  post:
    name: Create Post
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.check-comment.outputs.valid }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: contains(github.event.issue.labels.*.name, 'post')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Check comment
        id: check-comment
        run: |
          echo "Comment: ${{ github.event.comment.body }}"
          echo ${{ github.event.comment.body }} | python3 python/comment-parser.py

      - name: Add eyes reaction
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"content":"eyes"}' "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions"
      - name: Setup Python with dependencies
        if: steps.check-comment.outputs.valid == 'true'
        uses: ./.github/actions/setup-python-deps

      - name: Create branch
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          git checkout "post/${{ github.event.issue.number }}" || git checkout -b "post/${{ github.event.issue.number }}"

      - name: Create post
        if: steps.check-comment.outputs.valid == 'true'
        env:
          POST_TITLE: ${{ github.event.issue.title }}
          POST_BODY: ${{ github.event.issue.body }}
          POST_NUMBER: ${{ github.event.issue.number }}
          POST_AUTHOR: ${{ github.event.issue.user.login }}
          POST_DATE: ${{ github.event.issue.created_at }}
        run: |
          python python/poster.py ${{ github.event.issue.number }}

      - name: Setup GCP credentials
        if: steps.check-comment.outputs.valid == 'true' && steps.check-comment.outputs.translate == 'true'
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $HOME/gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV

      - name: Translate post
        if: steps.check-comment.outputs.valid == 'true' && steps.check-comment.outputs.translate == 'true'
        env:
          GOOGLE_CLOUD_PROJECT: devhouse-80936
        run: |
          python python/translator.py ${{ github.event.issue.number }}

      - name: Setup git bot
        if: steps.check-comment.outputs.valid == 'true'
        uses: ./.github/actions/setup-git-bot

      - name: Commit post
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          git add site/content/${{ github.event.issue.number }}.md
          git add site/static/images/avatars/
          git commit -m "Add post for post ${{ github.event.issue.number }}"
          git push

      - name: Create and merge PR
        if: steps.check-comment.outputs.valid == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "Add post for post ${{ github.event.issue.number }}" --body "Add post for PR #${{ github.event.issue.number }}" --base main --head "post/${{ github.event.issue.number }}"
          gh pr merge --squash --delete-branch

  update-gallery:
    name: Update Gallery
    uses: ./.github/workflows/gallery.yaml
    needs: post
    if: needs.post.outputs.valid == 'true'
    secrets: inherit
    permissions:
      contents: write
      pull-requests: write

  deploy:
    name: Deploy
    uses: ./.github/workflows/deploy.yaml
    needs: update-gallery
    if: needs.post.outputs.valid == 'true'
    secrets: inherit
    permissions:
      contents: write
      pull-requests: write

  reactions:
    name: React
    runs-on: ubuntu-latest
    needs: deploy
    if: needs.post.outputs.valid == 'true'
    permissions:
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Remove eyes reaction
        run: |
          REACTION_ID=$(curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions" | jq " .[] | select(.user.login == \"github-actions[bot]\") | .id ")
          curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions/$REACTION_ID"

      - name: Add success reaction
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"content":"+1"}' "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions"
