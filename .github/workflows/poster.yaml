name: "Post"

on:
  issue_comment:

jobs:
  post:
    name: "Create Post"
    permissions: write-all
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'post')
    steps:
      - name: "checkout"
        uses: actions/checkout@v4
        with:
          ref: main
      - name: "check comment"
        id: check-comment
        run: |
          echo "Comment: ${{ github.event.comment.body }}"
          if [[ "${{ github.event.comment.body }}" == "/post" ]]; then
            echo "::set-output name=valid::true"
          else
            echo "::set-output name=valid::false"
          fi
      - name: "eyes react"
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"content":"eyes"}' "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions"
      - name: "setup python"
        if: steps.check-comment.outputs.valid == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: "install dependencies"
        if: steps.check-comment.outputs.valid == 'true'
        run: pip install -r python/requirements.txt
      - name: "create branch"
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          git checkout "post/${{ github.event.issue.number }}" || git checkout -b "post/${{ github.event.issue.number }}"
      - name: "post creator"
        if: steps.check-comment.outputs.valid == 'true'
        env:
          POST_TITLE: ${{ github.event.issue.title }}
          POST_BODY: ${{ github.event.issue.body }}
          POST_NUMBER: ${{ github.event.issue.number }}
          POST_AUTHOR: ${{ github.event.issue.user.login }}
          POST_DATE: ${{ github.event.issue.created_at }}
        run: |
          python python/poster.py ${{ github.event.issue.number }}
      - name: "translate"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python python/translator.py ${{ github.event.issue.number }}
      - name: "commit post"
        if: steps.check-comment.outputs.valid == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global push.autosetupremote true
          git add site/content/${{ github.event.issue.number }}.md
          git commit -m "Add post for post ${{ github.event.issue.number }}"
          git push
      - name: "merge branch"
        if: steps.check-comment.outputs.valid == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "Add post for post ${{ github.event.issue.number }}" --body "Add post for PR #${{ github.event.issue.number }}" --base main --head "post/${{ github.event.issue.number }}"
          gh pr merge --auto --squash --delete-branch

  update-gallery:
    name: "Update Gallery"
    uses: ./.github/workflows/gallery.yaml
    needs: post
    secrets: inherit
    permissions: write-all

  deploy:
    name: "Deploy"
    uses: ./.github/workflows/deploy.yaml
    needs: update-gallery
    secrets: inherit
    permissions: write-all

  reactions:
    name: "React"
    runs-on: ubuntu-latest
    needs: update-gallery
    steps:
      - name: "checkout"
        uses: actions/checkout@v4
        with:
          ref: main
      - name: "reset reaction"
        run: |
          REACTION_ID=$(curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions" | jq " .[] | select(.user.login == \"github-actions[bot]\") | .id ")
          curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions/$REACTION_ID"
      - name: "react success"
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"content":"+1"}' "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions"
