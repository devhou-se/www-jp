name: Game Content Notifier

on:
  workflow_call:
    inputs:
      issue_number:
        required: true
        type: string
        
jobs:
  notify-game-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          # No longer need PyJWT and cryptography since we're using GITHUB_TOKEN
          echo "Using default GITHUB_TOKEN for authentication"
          
      - name: Get post content
        id: get-content
        run: |
          POST_BODY=$(gh issue view ${{ inputs.issue_number }} --json body -q .body)
          POST_AUTHOR=$(gh issue view ${{ inputs.issue_number }} --json author -q .author.login)
          POST_TITLE=$(gh issue view ${{ inputs.issue_number }} --json title -q .title)
          POST_DATE=$(gh issue view ${{ inputs.issue_number }} --json createdAt -q .createdAt)
          
          # Clean content for JSON
          POST_BODY_ESCAPED=$(echo "$POST_BODY" | jq -aRs .)
          POST_TITLE_ESCAPED=$(echo "$POST_TITLE" | jq -aRs .)
          
          # Create payload file
          cat > payload.json << EOF
          {
            "event_type": "new_post",
            "client_payload": {
              "post_id": "${{ inputs.issue_number }}",
              "title": $POST_TITLE_ESCAPED,
              "author": "$POST_AUTHOR",
              "date": "$POST_DATE",
              "content": $POST_BODY_ESCAPED
            }
          }
          EOF
          
          cat payload.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Trigger game repo workflow
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.GAME_REPO_OWNER }}/${{ secrets.GAME_REPO_NAME }}/dispatches \
            --data @payload.json